//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EF.DatabaseFirst
{
    using System;
    using System.Collections.Generic;

    #region Dynamic Proxy(POCO Proxy)
    //Dynamic Proxy is a runtime proxy class of POCO entity. 
    //It is like a wrapper class of POCO entity. Dynamic proxy entities 
    //allow lazy loading and automatic change tracking.
    public partial class Student
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Student()
        {
            this.Courses = new HashSet<Course>();
        }

        public int StudentID { get; set; }
        public string StudentName { get; set; }
        public Nullable<int> StandardId { get; set; }
        public byte[] RowVersion { get; set; }

        public virtual Standard Standard { get; set; }
        public virtual StudentAddress StudentAddress { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Course> Courses { get; set; }
    }
    #endregion

    #region POCO Entity (Plain Old CLR Object)
    //POCO class is the class that doesn't depend on any framework 
    //specific base class. It is like any other normal .net class which
    //is why it is called "Plain Old CLR Objects".
    //These POCO entities(also known as persistence-ignorant objects) 
    //support most of the same query, insert, update, and delete behaviors
    //as entity types that are generated by the Entity Data Model.The following 
    //is an example of Student POCO entity.
    public class StudentPOCO
    {
        public StudentPOCO()
        {
            this.Courses = new List<Course>();
        }

        public int StudentID { get; set; }
        public string StudentName { get; set; }
        public Nullable<int> StandardId { get; set; }

        public Standard Standard { get; set; }//no virtual navigation property!
        public StudentAddress StudentAddress { get; set; }//no virtual navigation property!
        public IList<Course> Courses { get; set; }//no virtual navigation property!
    }
    #endregion
}
