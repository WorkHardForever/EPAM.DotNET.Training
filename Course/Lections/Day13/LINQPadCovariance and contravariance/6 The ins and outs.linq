<Query Kind="Program" />

//Ковариантность позволяет использовать производные типы 
//с глубиной наследования больше, нежели у типа, заданного
//универсальным параметром

public interface IEnumerable <out T>
{
	IEnumerator<T> GetEnumerator();
}
//Контравариантность позволяет использовать производный тип 
//меньшей глубины наследования, нежели у типа, заданного 
//универсальным параметром.

public interface IComparer <in T>
{
	int Compare (T x, T y);	
}

void Main()
{
}